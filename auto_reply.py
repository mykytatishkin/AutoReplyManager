from pyrogram import Client, filters
from datetime import datetime
import re

# –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ Telegram API
api_id = "9902235"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à API ID
api_hash = "53b2a875f92fa666abb1493b9ccc8eab"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à API Hash

# –î–∞—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—ã–µ –±–æ—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å
WORK_DATES = [
    (12, 29),
    (12, 30),  # 30 –¥–µ–∫–∞–±—Ä—è
    (12, 31),  # 31 –¥–µ–∫–∞–±—Ä—è
    (1, 1),    # 1 —è–Ω–≤–∞—Ä—è
    (1, 2),    # 2 —è–Ω–≤–∞—Ä—è
    (1, 3),    # 3 —è–Ω–≤–∞—Ä—è
]

AUTO_REPLY_MESSAGE = (
    "–î–æ–±—Ä–æ–≥–æ –¥–Ω—èüéÖ\n"
    "–í—ñ—Ç–∞—î–º–æ –í–∞—Å —ñ–∑ –ù–æ–≤–æ—Ä—ñ—á–Ω–∏–º–∏ —Å–≤—è—Ç–∞–º–∏!üéÑ\n"
    "–ù–∞–≥–∞–¥—É—î–º–æ, —â–æ –ª–∏—à–µ 5 –¥–Ω—ñ–≤ –Ω–∞ —Ä—ñ–∫ –∑ 30.12.2023 –ø–æ 03.01.2024 (–≤–∫–ª—é—á–Ω–æ) –∫—É—Ä–∞—Ç–æ—Ä–∏ –≤–∏—Ö—ñ–¥–Ω—ñ.\n"
    "–í–∏ –º–æ–∂–µ—Ç–µ –Ω–∞—Ä–∞–∑—ñ –Ω–∞–ø–∏—Å–∞—Ç–∏ –≤—Å—ñ –≤–∞—à—ñ –ø–∏—Ç–∞–Ω–Ω—è –≤ —á–∞—Ç —ñ –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤ –ø–µ—Ä—à—É —á–µ—Ä–≥—É\n"
    "–ú–∏ –¥–æ–ø–æ–º–æ–∂–µ–º–æ –í–∞–º –≤–∏—Ä—ñ—à–∏—Ç–∏ –≤—Å—ñ –í–∞—à—ñ –ø–∏—Ç–∞–Ω–Ω—è –∑ 04.01.2024 –∑–∞ –≥—Ä–∞—Ñ—ñ–∫–æ–º –∑ 11:00 –¥–æ 19:00 –±–µ–∑ –≤–∏—Ö—ñ–¥–Ω–∏—Öü§ù \n"
    "–ë–∞–∂–∞—î–º–æ –≤–∞–º —á—É–¥–æ–≤–∏—Ö —Å–≤—è—Ç —ñ –∑–∞—Ä—è–¥—É –µ–Ω–µ—Ä–≥—ñ—ó –Ω–∞ –Ω–æ–≤–∏–π —Ä—ñ–∫! üéâ\n"
)


def is_working_time() -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å —Ä–∞–±–æ—á–∏–º –¥–ª—è –±–æ—Ç–∞."""
    now = datetime.now()
    return (now.month, now.day) in WORK_DATES


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
app = Client("manager_account", api_id=api_id, api_hash=api_hash)

# ID —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —á–∞—Ç–∞ Telegram
SYSTEM_CHAT_ID = 777000  # Telegram System Notifications Chat ID
YOUR_CHAT_ID = 876386326  # –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –ª–∏—á–Ω—ã–π ID (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ client.get_me().id)


@app.on_message(filters.chat(SYSTEM_CHAT_ID))
async def forward_login_code(client, message):
    """–ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Ç–æ–ª—å–∫–æ –∫–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è Telegram."""
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —á–∏—Å–ª–æ–≤–æ–≥–æ –∫–æ–¥–∞
    match = re.search(r"Login code: (\d+)", message.text)
    if match:
        login_code = match.group(1)  # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–æ–≤–æ–π –∫–æ–¥
        if YOUR_CHAT_ID:
            await client.send_message(YOUR_CHAT_ID, f"–í–∞—à –∫–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞: {login_code}")
        else:
            print("YOUR_CHAT_ID –Ω–µ —É–∫–∞–∑–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à ID –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏.")
    else:
        print("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–¥–∞ –¥–ª—è –≤—Ö–æ–¥–∞.")

@app.on_message(filters.private & ~filters.me)
async def auto_reply(client, message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."""
    if is_working_time():
        await message.reply_text(AUTO_REPLY_MESSAGE)


def main():
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run()


if __name__ == "__main__":
    main()