from pyrogram import Client, filters
from datetime import datetime
import re

# –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ Telegram API
api_id = "9902235"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à API ID
api_hash = "53b2a875f92fa666abb1493b9ccc8eab"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à API Hash

# ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
USER_CHAT_ID = 876386326  # –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# ID —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —á–∞—Ç–∞ Telegram
SYSTEM_CHAT_ID = 777000  # Telegram System Notifications Chat ID

# –î–∞—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—ã–µ –±–æ—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å
WORK_DATES = [
    (12, 29),
    (12, 30),  # 30 –¥–µ–∫–∞–±—Ä—è
    (12, 31),  # 31 –¥–µ–∫–∞–±—Ä—è
    (1, 1),    # 1 —è–Ω–≤–∞—Ä—è
    (1, 2),    # 2 —è–Ω–≤–∞—Ä—è
    (1, 3),    # 3 —è–Ω–≤–∞—Ä—è
]

AUTO_REPLY_MESSAGE = (
    "–î–æ–±—Ä–æ–≥–æ –¥–Ω—èüéÖ\n"
    "–í—ñ—Ç–∞—î–º–æ –í–∞—Å —ñ–∑ –ù–æ–≤–æ—Ä—ñ—á–Ω–∏–º–∏ —Å–≤—è—Ç–∞–º–∏!üéÑ\n"
    "–ù–∞–≥–∞–¥—É—î–º–æ, —â–æ –ª–∏—à–µ 5 –¥–Ω—ñ–≤ –Ω–∞ —Ä—ñ–∫ –∑ 30.12.2023 –ø–æ 03.01.2024 (–≤–∫–ª—é—á–Ω–æ) –∫—É—Ä–∞—Ç–æ—Ä–∏ –≤–∏—Ö—ñ–¥–Ω—ñ.\n"
    "–í–∏ –º–æ–∂–µ—Ç–µ –Ω–∞—Ä–∞–∑—ñ –Ω–∞–ø–∏—Å–∞—Ç–∏ –≤—Å—ñ –≤–∞—à—ñ –ø–∏—Ç–∞–Ω–Ω—è –≤ —á–∞—Ç —ñ –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤ –ø–µ—Ä—à—É —á–µ—Ä–≥—É\n"
    "–ú–∏ –¥–æ–ø–æ–º–æ–∂–µ–º–æ –í–∞–º –≤–∏—Ä—ñ—à–∏—Ç–∏ –≤—Å—ñ –í–∞—à—ñ –ø–∏—Ç–∞–Ω–Ω—è –∑ 04.01.2024 –∑–∞ –≥—Ä–∞—Ñ—ñ–∫–æ–º –∑ 11:00 –¥–æ 19:00 –±–µ–∑ –≤–∏—Ö—ñ–¥–Ω–∏—Öü§ù \n"
    "–ë–∞–∂–∞—î–º–æ –≤–∞–º —á—É–¥–æ–≤–∏—Ö —Å–≤—è—Ç —ñ –∑–∞—Ä—è–¥—É –µ–Ω–µ—Ä–≥—ñ—ó –Ω–∞ –Ω–æ–≤–∏–π —Ä—ñ–∫! üéâ\n"
)


def is_working_time() -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å —Ä–∞–±–æ—á–∏–º –¥–ª—è –±–æ—Ç–∞."""
    now = datetime.now()
    return (now.month, now.day) in WORK_DATES


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
app = Client("manager_account", api_id=api_id, api_hash=api_hash)


@app.on_message(filters.private & ~filters.me)
async def auto_reply(client, message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."""
    if is_working_time():
        await message.reply_text(AUTO_REPLY_MESSAGE)


@app.on_message(filters.chat(SYSTEM_CHAT_ID) & filters.text)
async def handle_system_chat_message(client, message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —á–∞—Ç–∞."""
    print(f"–°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.text}")
    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    match = re.search(r"\b\d{4,8}\b", message.text)
    if match:
        code = match.group(0)
        print(f"–ù–∞–π–¥–µ–Ω –∫–æ–¥: {code}")
        try:
            await client.send_message(USER_CHAT_ID, f"–ü–æ–ª—É—á–µ–Ω –∫–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —á–∞—Ç–∞: {code}")
            print(f"–ö–æ–¥ {code} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å chat_id {USER_CHAT_ID}.")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    else:
        print("–ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.")


@app.on_message(filters.private)
async def get_chat_id(client, message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    print(f"Chat ID: {message.chat.id}")
    await message.reply(f"–í–∞—à Chat ID: {message.chat.id}")


def main():
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run()


if __name__ == "__main__":
    main()